name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4

    - name: nettoyage docker
      run: |
        docker system prune -a -f

    - name: Build et push de lâ€™image Docker
      run: |
        # Utilisation du NodePort externe (30470)
        IMAGE_NAME="$(minikube ip):30470/project-python"
    
        docker build -t $IMAGE_NAME:latest .
        docker tag $IMAGE_NAME:latest $IMAGE_NAME:v1
        docker push $IMAGE_NAME:latest
        docker push $IMAGE_NAME:v1

    - name: deploy
      run: |
        docker pull $(minikube ip):30470/project-python
        minikube image load $(minikube ip):30470/project-python:latest
        kubectl delete deployment project2-pipeline --ignore-not-found=true
        cat <<EOF | kubectl apply -f -
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: project2-pipeline
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: project2-pipeline
          template:
            metadata:
              labels:
                app: project2-pipeline
            spec:
              containers:
                - name: project-python
                  image: $(minikube ip):30470/project-python:latest
                  imagePullPolicy: Always
                  ports:
                    - containerPort: 5000
        EOF
        kubectl expose deployment/project2-pipeline --type="NodePort" --port=5000 --name=project2-pipeline
        kubectl get pods
        kubectl get svc
        kubectl get ingress



      

