version: 2.1

executors:
  python-executor:
    docker:
      - image: circleci/python:3.9  # Utilise une image Docker officielle pour Python
    working_directory: ~/repo

jobs:
  install_dependencies:
    executor: python-executor
    steps:
      - checkout  # Cloner ton repo
      - run:
          name: Installer les dépendances
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

  # run_tests:
  #   executor: python-executor
  #   steps:
  #     - checkout  # Cloner ton repo
  #     - run:
  #         name: Exécuter les tests
  #         command: |
  #           . venv/bin/activate
  #           pytest tests/  # Remplace `tests/` par le dossier où se trouvent tes tests

  build_docker_image:
    docker:
      - image: docker:19.03.12
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: true
      - run:
          name: Build Docker image
          command: |
            docker build -t mon-image-docker .

  deploy:
    docker:
      - image: circleci/python:3.9  # Ou ton image Python si tu préfères
    steps:
      - checkout
      - run:
          name: Déployer sur Kubernetes
          command: |
            kubectl apply -f deployment.yaml  # Assure-toi d'avoir le fichier `deployment.yaml` pour Kubernetes

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - install_dependencies
      # - run_tests:
      #     requires:
      #       - install_dependencies
      - build_docker_image:
          requires:
            - run_tests
      - deploy:
          requires:
            - build_docker_image
